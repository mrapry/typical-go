package typtmpl_test

import (
	"testing"

	"github.com/typical-go/typical-go/pkg/typtmpl"
)

func TestConfigAnnotated(t *testing.T) {
	testTemplate(t,
		testcase{
			testName: "constructor for configuration",
			Template: &typtmpl.ConfigAnnotated{
				Package: "main",
				Imports: []string{"pkg1", "pkg2"},
				CfgCtors: []*typtmpl.CfgCtor{
					{Name: "", Prefix: "AAA", SpecType: "*Sample", SpecType2: "Sample"},
				},
			},
			expected: `package main

// Autogenerated by Typical-Go. DO NOT EDIT.

import (
	"pkg1"
	"pkg2"
)

func init() { 
	typapp.Provide(
		&typapp.Constructor{
			Name: "",
			Fn: func() (cfg *Sample, err error) {
				cfg = new(Sample)
				if err = typgo.ProcessConfig("AAA", cfg); err != nil {
					return nil, err
				}
				return
			},
		},
	)
}`,
		},
	)
}
