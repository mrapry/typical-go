package typfactory

import (
	"io"
	"text/template"
)

const initialApp = `package typical

// Autogenerated by Typical-Go. DO NOT EDIT.

import (
	"github.com/typical-go/typical-go/pkg/typapp"{{range $import := .Imports}}
	"{{$import}}"{{end}}
)

func init() {
	{{if .Constructors}}typapp.AppendConstructor({{range $constructor := .Constructors}}
		typapp.NewConstructor({{$constructor}}),{{end}}
	)
{{end}}}
`

// InitialApp writer
type InitialApp struct {
	Imports      []string
	Constructors []string
}

// Write the tyicalw
func (t *InitialApp) Write(w io.Writer) (err error) {
	var tmpl *template.Template
	if tmpl, err = template.New("").Parse(initialApp); err != nil {
		return
	}
	return tmpl.Execute(w, t)
}
