package typtmpl_test

import (
	"strings"
	"testing"

	"github.com/stretchr/testify/require"
	"github.com/typical-go/typical-go/pkg/typtmpl"
)

func TestCtorGenerated(t *testing.T) {

	testcases := []struct {
		TestName string
		typtmpl.Template
		Expected string
	}{
		{
			TestName: "common constructor",
			Template: &typtmpl.CtorAnnotated{
				Package: "main",
				Imports: []string{"pkg1", "pkg2"},
				Ctors: []*typtmpl.Ctor{
					{Name: "", Def: "pkg1.NewFunction1"},
					{Name: "", Def: "pkg2.NewFunction2"},
				},
			},
			Expected: `package main

// Autogenerated by Typical-Go. DO NOT EDIT.

import (
	"pkg1"
	"pkg2"
)

func init() { 
	typapp.AppendCtor(
		&typapp.Constructor{Name: "", Fn: pkg1.NewFunction1},
		&typapp.Constructor{Name: "", Fn: pkg2.NewFunction2},
	)
}`,
		},
	}

	for _, tt := range testcases {
		t.Run(tt.TestName, func(t *testing.T) {
			var out strings.Builder
			require.NoError(t, tt.Execute(&out))
			require.Equal(t, tt.Expected, out.String())
		})
	}

}
