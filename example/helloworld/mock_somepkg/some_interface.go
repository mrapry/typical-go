// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/typical-go/typical-go/example/helloworld/somepkg (interfaces: SomeInterface)

// Package mock_somepkg is a generated GoMock package.
package mock_somepkg

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSomeInterface is a mock of SomeInterface interface
type MockSomeInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSomeInterfaceMockRecorder
}

// MockSomeInterfaceMockRecorder is the mock recorder for MockSomeInterface
type MockSomeInterfaceMockRecorder struct {
	mock *MockSomeInterface
}

// NewMockSomeInterface creates a new mock instance
func NewMockSomeInterface(ctrl *gomock.Controller) *MockSomeInterface {
	mock := &MockSomeInterface{ctrl: ctrl}
	mock.recorder = &MockSomeInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSomeInterface) EXPECT() *MockSomeInterfaceMockRecorder {
	return m.recorder
}

// Method mocks base method
func (m *MockSomeInterface) Method() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Method")
}

// Method indicates an expected call of Method
func (mr *MockSomeInterfaceMockRecorder) Method() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Method", reflect.TypeOf((*MockSomeInterface)(nil).Method))
}
