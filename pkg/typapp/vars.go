package typapp

import (
	"io"
	"os"
)

var (
	// Name of application. Injected from gobuild ldflags
	// `-X github.com/typical-go/typical-go/pkg/typapp.Name=PROJECT-NAME`
	Name string
	// Version of applicatoin. Injected from gobuild ldflags
	// `-X github.com/typical-go/typical-go/pkg/typapp.Version=PROJECT-NAME`
	Version string

	// Stdout standard output
	Stdout io.Writer = os.Stdout
)

var (
	ctorTag = "@ctor"
	dtorTag = "@dtor"
)

const ctorAnnotTmpl = `package {{.Package}}

// Autogenerated by Typical-Go. DO NOT EDIT.

import ({{range $import := .Imports}}
	"{{$import}}"{{end}}
)

func init() { {{if .Ctors}}
	typapp.AppendCtor({{range $c := .Ctors}}
		&typapp.Constructor{Name: "{{$c.Name}}", Fn: {{$c.Def}}},{{end}}
	){{end}}
}`

const dtorAnnotTmpl = `package {{.Package}}

// Autogenerated by Typical-Go. DO NOT EDIT.

import ({{range $import := .Imports}}
	"{{$import}}"{{end}}
)

func init() { {{if .Dtors}}
	typapp.AppendDtor({{range $d := .Dtors}}
		&typapp.Destructor{Fn: {{$d.Def}}},{{end}}
	){{end}}
}`
